# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Answer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, answer_id: str=None, body: str=None, votes: int=None, question_id: str=None, created_by: str=None, created_at: str=None):  # noqa: E501
        """Answer - a model defined in Swagger

        :param answer_id: The answer_id of this Answer.  # noqa: E501
        :type answer_id: str
        :param body: The body of this Answer.  # noqa: E501
        :type body: str
        :param votes: The votes of this Answer.  # noqa: E501
        :type votes: int
        :param question_id: The question_id of this Answer.  # noqa: E501
        :type question_id: str
        :param created_by: The created_by of this Answer.  # noqa: E501
        :type created_by: str
        :param created_at: The created_at of this Answer.  # noqa: E501
        :type created_at: str
        """
        self.swagger_types = {
            'answer_id': str,
            'body': str,
            'votes': int,
            'question_id': str,
            'created_by': str,
            'created_at': str
        }

        self.attribute_map = {
            'answer_id': 'answerId',
            'body': 'Body',
            'votes': 'Votes',
            'question_id': 'questionId',
            'created_by': 'CreatedBy',
            'created_at': 'CreatedAt'
        }
        self._answer_id = answer_id
        self._body = body
        self._votes = votes
        self._question_id = question_id
        self._created_by = created_by
        self._created_at = created_at

    @classmethod
    def from_dict(cls, dikt) -> 'Answer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Answer of this Answer.  # noqa: E501
        :rtype: Answer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer_id(self) -> str:
        """Gets the answer_id of this Answer.


        :return: The answer_id of this Answer.
        :rtype: str
        """
        return self._answer_id

    @answer_id.setter
    def answer_id(self, answer_id: str):
        """Sets the answer_id of this Answer.


        :param answer_id: The answer_id of this Answer.
        :type answer_id: str
        """

        self._answer_id = answer_id

    @property
    def body(self) -> str:
        """Gets the body of this Answer.


        :return: The body of this Answer.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body: str):
        """Sets the body of this Answer.


        :param body: The body of this Answer.
        :type body: str
        """

        self._body = body

    @property
    def votes(self) -> int:
        """Gets the votes of this Answer.


        :return: The votes of this Answer.
        :rtype: int
        """
        return self._votes

    @votes.setter
    def votes(self, votes: int):
        """Sets the votes of this Answer.


        :param votes: The votes of this Answer.
        :type votes: int
        """

        self._votes = votes

    @property
    def question_id(self) -> str:
        """Gets the question_id of this Answer.


        :return: The question_id of this Answer.
        :rtype: str
        """
        return self._question_id

    @question_id.setter
    def question_id(self, question_id: str):
        """Sets the question_id of this Answer.


        :param question_id: The question_id of this Answer.
        :type question_id: str
        """

        self._question_id = question_id

    @property
    def created_by(self) -> str:
        """Gets the created_by of this Answer.


        :return: The created_by of this Answer.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by: str):
        """Sets the created_by of this Answer.


        :param created_by: The created_by of this Answer.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def created_at(self) -> str:
        """Gets the created_at of this Answer.


        :return: The created_at of this Answer.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this Answer.


        :param created_at: The created_at of this Answer.
        :type created_at: str
        """

        self._created_at = created_at
